CREATE OR REPLACE PROCEDURE SAJET.KEY_PALLET_UPDATE_SN (
   TLINEID IN NUMBER,
   TSTAGEID IN NUMBER,
   TPROCESSID IN NUMBER,
   TTERMINALID IN NUMBER,
   TPALLET IN VARCHAR2,
   TSTATUS IN VARCHAR2,
   TNOW IN DATE,
   TEMPID IN VARCHAR2,
   INTIME IN DATE,
   OUTTIME IN DATE,
   TRES OUT VARCHAR2)
IS
   CURSOR GETSN IS
      SELECT SERIAL_NUMBER
        FROM SAJET.G_SN_STATUS
       WHERE PALLET_NO = TPALLET;
   CUR_GETSN GETSN%ROWTYPE;
   CNEXTPROCESS SAJET.G_SN_STATUS.NEXT_PROCESS%TYPE;
   CROUTEID NUMBER;
BEGIN
   SELECT ROUTE_ID INTO CROUTEID
     FROM SAJET.G_SN_STATUS
    WHERE PALLET_NO = TPALLET AND ROWNUM = 1;

   SAJET.SJ_GET_NEXTPROCESS(CROUTEID, TPROCESSID, TSTATUS, CNEXTPROCESS);

   UPDATE SAJET.G_SN_STATUS
      SET PDLINE_ID = TLINEID, STAGE_ID = TSTAGEID, PROCESS_ID = TPROCESSID, TERMINAL_ID = TTERMINALID,
              NEXT_PROCESS = 0, IN_PROCESS_TIME = OUT_PROCESS_TIME, OUT_PROCESS_TIME = TNOW,
              IN_PDLINE_TIME = INTIME, OUT_PDLINE_TIME = OUTTIME, EMP_ID = TEMPID, WIP_PROCESS = CNEXTPROCESS
    WHERE PALLET_NO = TPALLET;

   FOR CUR_GETSN IN GETSN LOOP
      INSERT INTO SAJET.G_SN_TRAVEL
      SELECT * FROM SAJET.G_SN_STATUS WHERE SERIAL_NUMBER = CUR_GETSN.SERIAL_NUMBER AND ROWNUM = 1;
   END LOOP;

   TRES := 'OK';
EXCEPTION
   WHEN OTHERS THEN
      TRES := 'KEY_PALLET_UPDATE_SN ERROR';
END;
