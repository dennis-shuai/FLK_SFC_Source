CREATE OR REPLACE procedure
      SAJET.KEY_WIP_INCOMING(tterminalid in number,tnow in date,
		   TPALLET in varchar2,TEMPID IN varchar2, tres out varchar2) is
cursor sn_cursor is
   select serial_number
     from sajet.g_sn_status
       where  pallet_no = Tpallet;
sn_record sn_cursor%rowtype;
C_EMPNO SAJET.SYS_EMP.EMP_NO%TYPE;
C_TEMP NUMBER;
C_TEMP2 NUMBER;
C_TEMP3 NUMBER;
C_SN SAJET.G_SN_STATUS.SERIAL_NUMBER%TYPE;
C_WO SAJET.G_WO_BASE.WORK_ORDER%TYPE;
C_KPSN SAJET.G_SN_KEYPARTS.ITEM_PART_SN%TYPE;
begin	
    TRES:='OK';
	
	SELECT COUNT(SERIAL_NUMBER) INTO C_TEMP2 FROM SAJET.G_SN_STATUS WHERE PALLET_NO=TPALLET;
	
	--CHECK KP VALUE IS 'N/A' OR IS NULL '
	select  COUNT(A.SERIAL_NUMBER) INTO C_TEMP from SAJET.g_SN_STATUS A ,SAJET.g_SN_KEYPARTS  B
      WHERE A.PALLET_NO=tpallet AND A.SERIAL_NUMBER=B.SERIAL_NUMBER 
         AND ( B.ITEM_PART_SN='N/A' OR B.ITEM_PART_SN IS NULL) ;
    IF C_TEMP>0 THEN
	   select  A.SERIAL_NUMBER  INTO C_SN from SAJET.g_SN_STATUS A ,SAJET.g_SN_KEYPARTS  B
             WHERE A.PALLET_NO=tpallet AND A.SERIAL_NUMBER=B.SERIAL_NUMBER 
                AND ( B.ITEM_PART_SN='N/A' OR B.ITEM_PART_SN IS NULL)
				AND ROWNUM=1;
	   TRES:='SN '||C_SN||' ,KPSN IS N/A OR NULL';
	   GOTO ENDP;
	END IF;
	
	--CHECK KP COUNT (FOR ITEM_GROUP is not null  ) 
	IF substr(Tpallet,1,2)='PF' THEN
	   select COUNT(A.SERIAL_NUMBER) INTO C_TEMP from SAJET.g_SN_STATUS A ,SAJET.g_SN_KEYPARTS  B
             WHERE A.WORK_ORDER=B.WORK_ORDER AND A.PALLET_NO=tpallet 
			    AND A.SERIAL_NUMBER=B.SERIAL_NUMBER ;
	   IF C_TEMP=0 THEN
	      	TRES:='PALLET_NO '||TPALLET||' NOT KP';	
			GOTO ENDP;
	   ELSE
	       SELECT  mod(c_temp,c_temp2) into C_TEMP3 FROM DUAL;
	       IF C_TEMP3>0 THEN
		      	
			  SELECT WORK_ORDER,SERIAL_NUMBER INTO C_WO, C_SN from SAJET.G_SN_STATUS WHERE PALLET_NO=TPALLET AND ROWNUM=1;   
			  select count(item_part_sn) into c_temp2  from sajet.g_sn_keyparts 
			     where WORK_ORDER=C_WO AND  serial_number=C_SN ;
	              IF  C_TEMP2=0 THEN
	                 TRES:='SN '||C_SN||' NOT MAPPING KP';
	                 GOTO ENDP;			  			  
				  END IF;
            for sn_record in sn_cursor loop
	           select count(item_part_sn) into c_temp  from sajet.g_sn_keyparts  
                  where WORK_ORDER=C_WO AND  serial_number=sn_record.serial_number ;
	           if C_TEMP<>C_TEMP2 THEN
	              TRES:='SN '||SN_RECORD.serial_number||' KP QTY is '||C_TEMP||'<>'||C_TEMP2; 
		          GOTO ENDP;
	           END IF;
	        END LOOP;
		  else --C_TEMP3=0  --CHECK KPSN IS HDD_SN 
		      SELECT WORK_ORDER,SERIAL_NUMBER INTO C_WO, C_SN from SAJET.G_SN_STATUS WHERE PALLET_NO=TPALLET AND ROWNUM=1;   
			  select item_part_sn into C_KPSN from sajet.g_sn_keyparts 
			       WHERE WORK_ORDER=C_WO AND  serial_number=C_SN AND  ROWNUM=1;
			  SELECT COUNT(SERIAL_NUMBER) INTO C_TEMP FROM B2B.ASN_IN_SERIAL WHERE SERIAL_NUMBER=C_KPSN AND ROWNUM=1;
			  IF C_TEMP=0 THEN
			      SELECT COUNT(SERIAL_NUMBER) INTO C_TEMP FROM B2B.HT_ASN_IN_SERIAL WHERE SERIAL_NUMBER=C_KPSN AND ROWNUM=1;
			      IF C_TEMP=0 THEN
				      TRES:='HDD SN '+C_KPSN +' NOT IN 856!';
					  GOTO ENDP;
				  END IF;
			  END IF;  
		
	      END IF;
	   END IF;			
    
    ELSE -- substr(Tpallet,1,2)<>'PF'
       select COUNT(A.SERIAL_NUMBER) INTO C_TEMP from SAJET.g_SN_STATUS A ,SAJET.g_SN_KEYPARTS  B
           WHERE A.PALLET_NO=tpallet AND A.SERIAL_NUMBER=B.SERIAL_NUMBER 
               AND B.ITEM_GROUP IS NOT NULL;
	
       IF C_TEMP>0 THEN 
		   SELECT  mod(c_temp,c_temp2) into C_TEMP3 FROM DUAL;
	       IF C_TEMP3>0 THEN
		      	
			  SELECT SERIAL_NUMBER INTO C_SN from SAJET.G_SN_STATUS WHERE PALLET_NO=TPALLET AND ROWNUM=1;   
			  select count(item_part_sn) into c_temp2  from sajet.g_sn_keyparts 
			     where serial_number=C_SN AND ITEM_GROUP IS NOT NULL ;
	              IF  C_TEMP2=0 THEN
	                 TRES:='SN '||C_SN||' NOT MAPPING KP';
	                 GOTO ENDP;			  			  
				  END IF;
            for sn_record in sn_cursor loop
	           select count(item_part_sn) into c_temp  from sajet.g_sn_keyparts  
                  where  serial_number=sn_record.serial_number AND ITEM_GROUP IS NOT NULL;
	           if C_TEMP<>C_TEMP2 THEN
	              TRES:='SN '||SN_RECORD.serial_number||' KP QTY is '||C_TEMP||'<>'||C_TEMP2; 
		          GOTO ENDP;
	           END IF;
	       END LOOP;
	      END IF;
        END IF;
	
     END IF;
	
	
	
	SELECT EMP_NO INTO C_EMPNO FROM SAJET.SYS_EMP WHERE EMP_ID=TEMPID;
    Begin
	     for sn_record in sn_cursor loop  
	          SAJET.SJ_CKRT_ROUTE(TTERMINALID, SN_RECORD.SERIAL_NUMBER, TRES); 
              IF TRES <> 'OK' THEN
                  TRES := 'ROUTE ERROR (' ||SN_RECORD.SERIAL_NUMBER||')';
                  GOTO ENDP;
              END IF; 
		 END LOOP;
	
		 for sn_record in sn_cursor loop   
             SAJET.SJ_GO(TTERMINALID, SN_RECORD.SERIAL_NUMBER, TNOW, TRES, C_EMPNO);
             IF TRES <> 'OK' THEN
			      TRES:='UPDATE ERROR(SJ_GO) !';
                  GOTO ENDP;
              END IF;
	     END LOOP;
		  
      COMMIT;
   
     EXCEPTION
      WHEN OTHERS THEN
	       ROLLBACK;
           TRES := 'UPDATE ERROR(G_SN_STATUS)';
           GOTO ENDP;
     END; 
  <<endp>>	
     ROLLBACK;     
     NULL;
exception
  when others then
    rollback;
    tres:='KEY_WIP_INCOMING ERROR';
end;

