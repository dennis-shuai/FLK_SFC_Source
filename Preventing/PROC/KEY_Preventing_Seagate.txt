CREATE OR REPLACE procedure
      SAJET.KEY_Preventing_Seagate(tterminalid in number,tnow in date,
		   TWO IN varchar2,TPALLET in varchar2,TEMPID IN varchar2, tres out varchar2) is
cursor sn_cursor is
   select serial_number
     from sajet.g_sn_status
       where work_order=two and  pallet_no = Tpallet;
sn_record sn_cursor%rowtype;
cursor carton_cursor is
   select carton_no
     from sajet.g_sn_status
       where work_order=two and pallet_no = Tpallet;
carton_record carton_cursor%rowtype;
cursor KPSN_cursor is
   select item_part_sn  from sajet.g_sn_keyparts a,sajet.g_sn_status b 
      where b.WORK_ORDER=TWO AND  b.PALLET_NO=TPALLET
        and a.work_order=b.work_order and a.serial_number=b.serial_number;
	   -- and( a.item_part_sn<>null OR a.item_part_sn<>'N/A');
KPSN_reocrd KPSN_cursor%rowtype;

C_SN   SAJET.G_SN_STATUS.SERIAL_NUMBER%TYPE;
C_TEMP NUMBER;
C_TEMP2 NUMBER;
C_TEMP3 NUMBER;
C_EMPNO SAJET.SYS_EMP.EMP_NO%TYPE;
begin	
    TRES:='OK';
	--Check seagate pallet 格式
	select count(*) into c_temp from  dual where substr(Tpallet,1,2)='PF';
	if c_temp=0 then
	   TRES:='Pallet '||Tpallet||' NOT LIKE PF*******';
	   GOTO ENDP;
	end if;
	
	
	select count(serial_number) into c_temp2 from sajet.g_sn_status
	   where work_order=two and pallet_no=tpallet;
	if c_temp2=0 then
	  TRES:=TPALLET||' NOT FIND IN THE WO OF '||TWO	;
	  GOTO ENDP;
	END IF ;
	
    for sn_record in sn_cursor loop
	   select COUNT(serial_number) into C_TEMP from sajet.g_sn_status@SFCBK
	       WHERE SERIAL_NUMBER=sn_record.serial_number AND ROWNUM=1;
	   if C_TEMP=1 THEN
	     TRES:='SN '||SN_RECORD.serial_number||' IS DUB!'; 
		 GOTO ENDP;
	   END IF;
	END LOOP;
	
	for carton_record in carton_cursor loop
	    select count(carton_no) into c_temp from sajet.g_pack_carton@SFCBK 
		    where carton_no=carton_record.carton_no and rownum=1;
		if C_TEMP=1 THEN
		   TRES:='Cartton '||CARTON_RECORD.CARTON_NO||' IS DUB';
		   GOTO ENDP;
		END IF;
	end loop;
		
	select count(pallet_no) into c_temp from sajet.g_pack_pallet@SFCBK 
	     where pallet_no=Tpallet and rownum=1;
	   if c_temp=1 then
	      tres:='Pallet '||tpallet||' IS DUB!';
		  GOTO ENDP;
	   END IF;

	select count(item_part_sn) into c_temp 
	  from sajet.g_sn_keyparts a,sajet.g_sn_status b 
      where b.WORK_ORDER=TWO AND  b.PALLET_NO=TPALLET
        and a.work_order=b.work_order and a.serial_number=b.serial_number
	    and( a.item_part_sn<>null OR a.item_part_sn<>'N/A');
    if c_temp>0 then
	   SELECT  mod(c_temp,c_temp2) into C_TEMP3 FROM DUAL;
	   IF C_TEMP3>0 THEN
	      TRES:='KP COUNT IS ERROR';
		  GOTO ENDP;
	   ELSE
	      for KPSN_record in KPSN_cursor loop
	         SELECT COUNT(ITEM_PART_SN) INTO C_TEMP FROM SAJET.G_SN_KEYPARTS@SFCBK 
			    WHERE ITEM_PART_SN=KPSN_RECORD.ITEM_PART_SN AND ROWNUM=1;
			 IF C_TEMP=1 THEN
			   TRES:='KP '||KPSN_RECORD.ITEM_PART_SN||' IS DUB';
			   GOTO ENDP;
		     END IF;
	      end loop;
	   END IF;
	end if;	
	
	
	
	
	
	--CHECK 任意一個EDA SN的KP的個數(KPSN+KPNO)
	select serial_number into C_SN from sajet.g_sn_status
	   where work_order=two and pallet_no=tpallet and rownum=1;
	   
	select count(item_part_sn) into c_temp2  from sajet.g_sn_keyparts  
       where WORK_ORDER=TWO and serial_number=C_SN;
	IF  C_TEMP2=0 THEN
	    TRES:='SN '||C_SN||' NOT MAPPING KP';
	    GOTO ENDP;
	END IF ;
	
	--CHECK 每個EDA SN 的個數是否都相同(KPSN+KPNO)
    for sn_record in sn_cursor loop
	   select count(item_part_sn) into c_temp  from sajet.g_sn_keyparts  
            where WORK_ORDER=TWO and serial_number=sn_record.serial_number;
	   if C_TEMP<>C_TEMP2 THEN
	     TRES:='SN '||SN_RECORD.serial_number||' KP QTY is '||C_TEMP||'<>'||C_TEMP2; 
		 GOTO ENDP;
	   END IF;
	END LOOP;
	
	--CHECK HDD_SN 是否有做in 856  
	for KPSN_record in KPSN_cursor loop
       select count(serial_number) into c_temp from b2b.asn_in_serial 
	      where  serial_number=kpsn_record.item_part_sn and rownum=1;
	   if c_temp=0 then
	      select count(serial_number) into c_temp from b2b.ht_asn_in_serial 
	           where  serial_number=kpsn_record.item_part_sn and rownum=1;
		  if c_temp=0 then
		     TRES:='HDD SN '||KPSN_RECORD.ITEM_PART_SN||' NOT IN 856';
			 GOTO ENDP;
		  end if;
	   end if;
	end loop;
	
	--CHECK EDA_SN 是否有做pt 867 
    for sn_record in sn_cursor loop
	   select  count(serial_number) into c_temp from b2b.pt_serial
            where Serial_number=sn_record.serial_number and rownum=1;
	   if C_TEMP=1 THEN
	      TRES:='SN '||SN_RECORD.serial_number||' HAD IN STOCK'; 
		  GOTO ENDP;
	   ELSE
	       select  count(serial_number) into c_temp from b2b.HT_pt_serial
               where Serial_number=sn_record.serial_number and rownum=1;
		   if C_TEMP=1 THEN
	          TRES:='SN '||SN_RECORD.serial_number||' HAD IN STOCK'; 
		      GOTO ENDP;
		   END IF;
	   END IF;
	END LOOP;
	
   --CHECK HDD_SN 是否有做pt 867 
   for KPSN_record in KPSN_cursor loop
        select COUNT(DRIVE_SERIAL_NUMBER) INTO C_TEMP from b2b.pt_reference
	      where  DRIVE_SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	    if c_temp=1 then
	      TRES:='KP '||kpsn_record.item_part_sn||' HAD IN STOCK';
	      GOTO ENDP;
	    ELSE
	       select COUNT(DRIVE_SERIAL_NUMBER) INTO C_TEMP from b2b.ht_pt_reference
	          where  DRIVE_SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	          if c_temp=1 then
	             TRES:='KP '||kpsn_record.item_part_sn||' HAD IN STOCK';
	             GOTO ENDP;
			  end if;
	   end if;
	end loop;
	
	
	--CHECK EDA_SN 是否有做pt 867  IN SFCBK DB 
    for sn_record in sn_cursor loop
	   select  count(serial_number) into c_temp from b2b.pt_serial@SFCBK
            where Serial_number=sn_record.serial_number and rownum=1;
	   if C_TEMP=1 THEN
	      TRES:='SN '||SN_RECORD.serial_number||' HAD IN STOCK'; 
		  GOTO ENDP;
	   ELSE
	       select  count(serial_number) into c_temp from b2b.HT_pt_serial@SFCBK
               where Serial_number=sn_record.serial_number and rownum=1;
		   if C_TEMP=1 THEN
	          TRES:='SN '||SN_RECORD.serial_number||' HAD IN STOCK'; 
		      GOTO ENDP;
		   END IF;
	   END IF;
	END LOOP;
	
   --CHECK HDD_SN 是否有做pt 867 IN SFCBK DB
   for KPSN_record in KPSN_cursor loop
        select COUNT(DRIVE_SERIAL_NUMBER) INTO C_TEMP from b2b.pt_reference@SFCBK
	      where  DRIVE_SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	    if c_temp=1 then
	      TRES:='KP '||kpsn_record.item_part_sn||' HAD IN STOCK';
	      GOTO ENDP;
	    ELSE
	       select COUNT(DRIVE_SERIAL_NUMBER) INTO C_TEMP from b2b.ht_pt_reference@SFCBK
	          where  DRIVE_SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	          if c_temp=1 then
	             TRES:='KP '||kpsn_record.item_part_sn||' HAD IN STOCK';
	             GOTO ENDP;
			  end if;
	   end if;
	end loop;

    --check HDD_SN 是否有做 MRB 
    for KPSN_record in KPSN_cursor loop
        select COUNT(SERIAL_NUMBER) INTO C_TEMP from SAJET.MES_TO_MRB_SN
	      where  SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	    if c_temp=1 then
	      TRES:='KP '||kpsn_record.item_part_sn||' HAD SCAN MRB';
	      GOTO ENDP;
	    ELSE
	      select COUNT(SERIAL_NUMBER) INTO C_TEMP from SAJET.MES_HT_TO_MRB_SN
	      where  SERIAL_NUMBER=kpsn_record.item_part_sn and rownum=1;
	          if c_temp=1 then
	             TRES:='KP '||kpsn_record.item_part_sn||' HAD SCAN MRB';
	             GOTO ENDP;
		  end if;
	   end if;
	end loop;
	

  if tres='OK' Then
     Begin
	     for sn_record in sn_cursor loop  
	          SAJET.SJ_CKRT_ROUTE(TTERMINALID, SN_RECORD.SERIAL_NUMBER, TRES); 
              IF TRES <> 'OK' THEN
                  TRES := 'ROUTE ERROR - ' ||SN_RECORD.SERIAL_NUMBER;
                  GOTO ENDP;
              END IF; 
		 END LOOP;

		 SELECT EMP_NO INTO C_EMPNO FROM SAJET.SYS_EMP WHERE EMP_ID=TEMPID;
		 for sn_record in sn_cursor loop   
              SAJET.SJ_GO(TTERMINALID, SN_RECORD.SERIAL_NUMBER, TNOW, TRES, C_EMPNO);
              IF TRES <> 'OK' THEN
			      TRES:='UPDATE ERROR(SJ_GO) !';
                  GOTO ENDP;
              END IF;
	      END LOOP;
	 
	 
      --INSERT  INTO SAJET.G_CHECK_DUBSN(WORK_ORDER,PALLET_NO,UPDATE_TIME,EMP_ID )
		            -- VALUES(TWO,TPALLET,SYSDATE,TEMPID); 
      COMMIT;
   
     EXCEPTION
      WHEN OTHERS THEN
	       ROLLBACK;
           TRES := 'UPDATE ERROR';
           GOTO ENDP;
     END; 
   end if;
  <<endp>>	
     ROLLBACK;     
     NULL;
exception
  when others then
    rollback;
    tres:='KEY_Preventing_Seagate error';
end;
/
